oct20.deaths <- sum(oct20.covid.df$New_Death)
# NOVEMBER 2020
nov20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-11-01") & Date_Reported <= as.Date("2020-11-30")))
nov20.newcases <- sum(nov20.covid.df$New_Cases)
nov20.deaths <- sum(nov20.covid.df$New_Death)
# DECEMBER 2020
dec20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-12-01") & Date_Reported <= as.Date("2020-12-31")))
dec20.newcases <- sum(dec20.covid.df$New_Cases)
dec20.deaths <- sum(dec20.covid.df$New_Death)
# JANUARY 2021
jan21.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2021-01-01") & Date_Reported <= as.Date("2021-01-31")))
jan21.newcases <- sum(jan21.covid.df$New_Cases)
jan21.deaths <- sum(jan21.covid.df$New_Death)
# FEBRUARY 2021
feb21.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2021-02-01") & Date_Reported <= as.Date("2021-02-28")))
feb21.newcases <- sum(feb21.covid.df$New_Cases)
feb21.deaths <- sum(feb21.covid.df$New_Death)
# MARCH 2021
mar21.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2021-03-01") & Date_Reported <= as.Date("2021-03-31")))
mar21.newcases <- sum(mar21.covid.df$New_Cases)
mar21.deaths <- sum(mar21.covid.df$New_Death)
# Creating a variable for months
months <- c("JAN20", "FEB20", "MAR20", "APR20", "MAY20", "JUN20", "JUL20", "AUG20", "SEPT20", "OCT20", "NOV20", "DEC20", "JAN21", "FEB21", "MAR21")
# Creating a variable for new cases
newcases <- c(jan20.newcases, feb20.newcases, mar20.newcases, apr20.newcases, may20.newcases, jun20.newcases, jul20.newcases, aug20.newcases, sep20.newcases, oct20.newcases, nov20.newcases, dec20.newcases, jan21.newcases, feb21.newcases, mar21.newcases)
# Creating a variable for deaths
deaths <- c(jan20.deaths, feb20.deaths, mar20.deaths, apr20.deaths, may20.deaths, jun20.deaths, jul20.deaths, aug20.deaths, sep20.deaths, oct20.deaths, nov20.deaths, dec20.deaths, jan21.deaths, feb21.deaths, mar21.deaths)
# New Cases per Month Dataframe
monthly.covid.df <- data.frame(months,newcases,deaths)
monthly.covid.df
plot(monthly.covid.df)
plot(monthly.covid.df$months)
plot(monthly.covid.df$months, monthly.covid.df$deaths)
plot(monthly.covid.df$months, monthly.covid.df$deaths)
scatterplot(monthly.covid.df$months, monthly.covid.df$deaths)
# install.packages('dplyr')
# install.packages("magrittr")
library(magrittr)
library(dplyr)
library(ggplot2)
library(lubridate)
ggplot(monthly.covid.df, aes(x=months, y=newcases, size = pop)) +
geom_point(alpha=0.7)
ggplot(monthly.covid.df, aes(x=months, y=newcases, size = 2)) +
geom_point(alpha=0.7)
ggplot(monthly.covid.df, aes(x=monthly.covid.df$months, y=monthly.covid.df$newcases, size = 2)) +
geom_point(alpha=0.7)
ggplot(monthly.covid.df, aes(x=months, y=newcases, size = 2)) +
geom_point(alpha=0.7)
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
# Most basic bubble plot
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_viridis(discrete=TRUE, guide=FALSE, option="A") +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
# Get data:
library(gapminder)
# Charge libraries:
library(ggplot2)
library(gganimate)
# Make a ggplot, but add frame=year: one image per year
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
# Save at gif:
anim_save("271-ggplot2-animated-gif-chart-with-gganimate1.gif")
# Get data:
library(gapminder)
# Charge libraries:
library(ggplot2)
library(gganimate)
# Make a ggplot, but add frame=year: one image per year
ggplot(monthly.covid.df, aes(months, deaths, size = pop, color = continent)) +
geom_point() +
scale_x_log10() +
theme_bw() +
# gganimate specific bits:
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
# Save at gif:
anim_save("271-ggplot2-animated-gif-chart-with-gganimate1.gif")
install.packages(gganimate)
install.packages(gganimate)
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
install.packages(gapminder)
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- monthly.covid.df %>%
mutate(months=round(months,0)) %>%
mutate(newcases=round(newcases/1000000,2)) %>%
mutate(newcases=round(newcases,1)) %>%
# Reorder countries to having big bubbles on top
#arrange(desc(pop)) %>%
#mutate(newcases = factor(newcases, newcases)) %>%
# prepare text for tooltip
mutate(text = paste("Time Period: ", months, "New Cases: ", newcases, "Deaths: ", deaths, sep="")) %>%
# Classic ggplot
ggplot( aes(x=months, y=newcases, size = newcases, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- monthly.covid.df %>%
mutate(deaths=round(deaths,0)) %>%
mutate(newcases=round(newcases/1000000,2)) %>%
mutate(newcases=round(newcases,1)) %>%
# Reorder countries to having big bubbles on top
#arrange(desc(pop)) %>%
#mutate(newcases = factor(newcases, newcases)) %>%
# prepare text for tooltip
mutate(text = paste("Time Period: ", months, "New Cases: ", newcases, "Deaths: ", deaths, sep="")) %>%
# Classic ggplot
ggplot( aes(x=months, y=newcases, size = newcases, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- monthly.covid.df %>%
mutate(deaths=round(deaths,0)) %>%
mutate(newcases=round(newcases/1000000,2)) %>%
mutate(newcases=round(newcases,1)) %>%
# Reorder countries to having big bubbles on top
#arrange(desc(pop)) %>%
#mutate(newcases = factor(newcases, newcases)) %>%
# prepare text for tooltip
mutate(text = paste("Time Period: ", months, "New Cases: ", newcases, "Deaths: ", deaths, sep="")) %>%
# Classic ggplot
ggplot( aes(x=months, y=newcases, size = newcases, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
plot( months, newcases)
attach(monthly.covid.df)
plot( months, newcases)
attach(monthly.covid.df)
scatterplot(months ~ newcases, data=monthly.covid.df)
attach(monthly.covid.df)
library(car)
scatterplot(months ~ newcases, data=monthly.covid.df)
attach(monthly.covid.df)
library(car)
lines(months ~ newcases, data=monthly.covid.df)
attach(monthly.covid.df)
plot(monthly.covid.df$months, monthly.covid.df$newcases)
attach(monthly.covid.df)
trendline(monthly.covid.df$months, monthly.covid.df$newcases)
attach(monthly.covid.df)
barplot(monthly.covid.df$months, monthly.covid.df$newcases)
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
attach(monthly.covid.df)
barplot(monthly.covid.df$months, monthly.covid.df$newcases,  ylim=c(-4,4))
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
attach(monthly.covid.df)
barplot(monthly.covid.df$months, monthly.covid.df$newcases,  ylim=c(-4,4))
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
hist(monthly.covid.df$months)
attach(monthly.covid.df)
barplot(monthly.covid.df$months, monthly.covid.df$newcases,  ylim=c(-4,4))
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
hist(monthly.covid.df$newcases)
as.numeric(monthly.covid.df$newcases)
attach(monthly.covid.df)
barplot(monthly.covid.df$months, monthly.covid.df$newcases,  ylim=c(-4,4))
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
hist(monthly.covid.df$newcases)
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
attach(monthly.covid.df)
barplot(monthly.covid.df$months, monthly.covid.df$newcases,  ylim=c(-4,4))
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
hist(monthly.covid.df$newcases)
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
barplot(monthly.covid.df$months, monthly.covid.df$newcases,  ylim=c(-4,4))
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
hist(monthly.covid.df$newcases)
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
barplot(monthly.covid.df$months, monthly.covid.df$newcases,  ylim=c(-4,4))
barplot(TX$Percent_Change, ylim=c(-4,4), col=ifelse(TX$Percent_Change>0,"darkolivegreen3","brown1"))
hist(monthly.covid.df$newcases)
monthly.covid.df$newcases
# Chunk 1: libraries
# install.packages('dplyr')
# install.packages("magrittr")
library(magrittr)
library(dplyr)
library(ggplot2)
library(lubridate)
# Chunk 2: dataset
ur.df <- read.csv("/Users/dishasrivastava/Documents/GitHub/economic-impact-of-covid19/Datasets/Unemployment-Monthly.csv")
covid19.health <- read.csv("/Users/dishasrivastava/Documents/GitHub/economic-impact-of-covid19/Datasets/United_States_COVID-19_Cases_and_Deaths_by_State_over_Time.csv")
# Chunk 3
# Dropping unused columns
ur.cleaned.df <- subset(ur.df, select = -c(Series.ID, Year, Period))
# Renaming columns
colnames(ur.cleaned.df) <- c("Time_Label", "Unemployment_Rate", "Monthly_Change")
#Result
ur.cleaned.df
# Chunk 4
# Dropping unused columns
covh.cleaned <- subset(covid19.health, select = c(submission_date, state, tot_cases, new_case, tot_death, new_death))
# Renaming columns
colnames(covh.cleaned) <- c("Date_Reported", "State", "Total_Cases", "New_Cases", "Total_Death", "New_Death")
# Chunk 5
# https://cran.r-project.org/web/packages/lubridate/vignettes/lubridate.html
covh.cleaned$Date_Reported <- mdy(covh.cleaned$Date_Reported) # returns year/month/day
# Result
head(covh.cleaned$Date_Reported)
# Chunk 6
# https://blog.exploratory.io/filter-with-date-function-ce8e84be680
# JANUARY 2020
jan20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported <= as.Date("2020-01-31")))
jan20.newcases <- sum(jan20.covid.df$New_Cases)
jan20.deaths <- sum(jan20.covid.df$New_Death)
# FEBRUARY 2020
feb20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-02-01") & Date_Reported <= as.Date("2020-02-28")))
feb20.newcases <- sum(feb20.covid.df$New_Cases)
feb20.deaths <- sum(feb20.covid.df$New_Death)
# MARCH 2020
mar20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-03-01") & Date_Reported <= as.Date("2020-03-31")))
mar20.newcases <- sum(mar20.covid.df$New_Cases)
mar20.deaths <- sum(mar20.covid.df$New_Death)
# APRIL 2020
apr20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-04-01") & Date_Reported <= as.Date("2020-04-30")))
apr20.newcases <- sum(apr20.covid.df$New_Cases)
apr20.deaths <- sum(apr20.covid.df$New_Death)
# MAY 2020
may20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-05-01") & Date_Reported <= as.Date("2020-05-31")))
may20.newcases <- sum(may20.covid.df$New_Cases)
may20.deaths <- sum(may20.covid.df$New_Death)
# JUNE 2020
jun20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-06-01") & Date_Reported <= as.Date("2020-06-30")))
jun20.newcases <- sum(jun20.covid.df$New_Cases)
jun20.deaths <- sum(jun20.covid.df$New_Death)
# JULY 2020
jul20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-07-01") & Date_Reported <= as.Date("2020-07-31")))
jul20.newcases <- sum(jul20.covid.df$New_Cases)
jul20.deaths <- sum(jul20.covid.df$New_Death)
# AUGUST 2020
aug20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-08-01") & Date_Reported <= as.Date("2020-08-31")))
aug20.newcases <- sum(aug20.covid.df$New_Cases)
aug20.deaths <- sum(aug20.covid.df$New_Death)
# SEPTEMBER 2020
sep20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-09-01") & Date_Reported <= as.Date("2020-09-30")))
sep20.newcases <- sum(sep20.covid.df$New_Cases)
sep20.deaths <- sum(sep20.covid.df$New_Death)
# OCTOBER 2020
oct20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-10-01") & Date_Reported <= as.Date("2020-10-31")))
oct20.newcases <- sum(oct20.covid.df$New_Cases)
oct20.deaths <- sum(oct20.covid.df$New_Death)
# NOVEMBER 2020
nov20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-11-01") & Date_Reported <= as.Date("2020-11-30")))
nov20.newcases <- sum(nov20.covid.df$New_Cases)
nov20.deaths <- sum(nov20.covid.df$New_Death)
# DECEMBER 2020
dec20.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2020-12-01") & Date_Reported <= as.Date("2020-12-31")))
dec20.newcases <- sum(dec20.covid.df$New_Cases)
dec20.deaths <- sum(dec20.covid.df$New_Death)
# JANUARY 2021
jan21.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2021-01-01") & Date_Reported <= as.Date("2021-01-31")))
jan21.newcases <- sum(jan21.covid.df$New_Cases)
jan21.deaths <- sum(jan21.covid.df$New_Death)
# FEBRUARY 2021
feb21.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2021-02-01") & Date_Reported <= as.Date("2021-02-28")))
feb21.newcases <- sum(feb21.covid.df$New_Cases)
feb21.deaths <- sum(feb21.covid.df$New_Death)
# MARCH 2021
mar21.covid.df <- (covh.cleaned %>%
select(Date_Reported, State, Total_Cases, New_Cases, Total_Death, New_Death) %>%
filter(Date_Reported >= as.Date("2021-03-01") & Date_Reported <= as.Date("2021-03-31")))
mar21.newcases <- sum(mar21.covid.df$New_Cases)
mar21.deaths <- sum(mar21.covid.df$New_Death)
# Chunk 7
# Creating a variable for months
months <- c("JAN20", "FEB20", "MAR20", "APR20", "MAY20", "JUN20", "JUL20", "AUG20", "SEPT20", "OCT20", "NOV20", "DEC20", "JAN21", "FEB21", "MAR21")
# Creating a variable for new cases
newcases <- c(jan20.newcases, feb20.newcases, mar20.newcases, apr20.newcases, may20.newcases, jun20.newcases, jul20.newcases, aug20.newcases, sep20.newcases, oct20.newcases, nov20.newcases, dec20.newcases, jan21.newcases, feb21.newcases, mar21.newcases)
# Creating a variable for deaths
deaths <- c(jan20.deaths, feb20.deaths, mar20.deaths, apr20.deaths, may20.deaths, jun20.deaths, jul20.deaths, aug20.deaths, sep20.deaths, oct20.deaths, nov20.deaths, dec20.deaths, jan21.deaths, feb21.deaths, mar21.deaths)
# New Cases per Month Dataframe
monthly.covid.df <- data.frame(months,newcases,deaths)
# Result
head(monthly.covid.df)
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
hist(monthly.covid.df$newcases)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
hist(monthly.covid.df$newcases)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
hist(monthly.covid.df$deaths)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
plot(monthly.covid.df$deaths)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
plot(monthly.covid.df$months, monthly.covid.df$deaths)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
plot(monthly.covid.df$deaths, monthly.covid.df$months)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
plot(monthly.covid.df$deaths, monthly.covid.df$newcases)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
plot(monthly.covid.df$deaths)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
plot(monthly.covid.df$deaths)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
counts <- table(monthly.covid.df$months, monthly.covid.df$newcases)
barplot(counts)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
counts <- table(monthly.covid.df$months, monthly.covid.df$newcases)
barplot(counts)
bbarplot(newcases)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
counts <- table(monthly.covid.df$months, monthly.covid.df$newcases)
barplot(counts)
bbarplot(newcases)
monthly.covid.df$newcases
monthly.covid.df$newcases <- as.numeric(monthly.covid.df$newcases)
monthly.covid.df$deaths <- as.numeric(monthly.covid.df$deaths)
counts <- table(monthly.covid.df$months, monthly.covid.df$newcases)
barplot(counts)
barplot(newcases)
monthly.covid.df$newcases
